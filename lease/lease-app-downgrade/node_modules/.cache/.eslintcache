[{"/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/index.js":"1","/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/screens/MapScreen/MapScreen.js":"2","/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/components/SearchBar/searchbar.js":"3","/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/components/Marker/marker.js":"4","/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/components/PropertyDetail/propertydetail.js":"5"},{"size":403,"mtime":1678337694861,"results":"6","hashOfConfig":"7"},{"size":6717,"mtime":1679975257479,"results":"8","hashOfConfig":"7"},{"size":7654,"mtime":1678337694710,"results":"9","hashOfConfig":"7"},{"size":338,"mtime":1678337694674,"results":"10","hashOfConfig":"7"},{"size":1048,"mtime":1678337694602,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pkzx3g",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/index.js",[],[],"/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/screens/MapScreen/MapScreen.js",[],[],"/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/components/SearchBar/searchbar.js",["28"],[],"import React from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nimport  {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport './style.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      searchFilters: {\n        minPrice: '',\n        maxPrice: '',\n        noBeds: '',\n        noBaths: '',\n        propertyType: '',\n        mapBounds:'',\n        address: '',\n\n      },\n      center:{lat:28.704060,lng:77.102490},\n      term: '' \n    };\n\n  }\n  handleChange = address => {\n    this.setState({ address });\n  };\n  handleSelect = async address => {\n    try {\n      const results = await geocodeByAddress(address);\n      const latLng = await getLatLng(results[0]);\n      \n      this.setState({\n        center: latLng,\n      });\n\n      this.props.onSelect(latLng);\n      \n    } catch (error) {\n      console.error('Error', error);\n    }\n  };\n  \n\n  handleInputChange = (event) => {\n    const { name, value, type } = event.target;\n    if (type === 'checkbox') {\n      this.setState(prevState => ({\n        searchFilters: {\n          ...prevState.searchFilters,\n          [name]: !prevState.searchFilters[name]\n        }\n      }));\n      \n    } else if (name === 'searchTerm') {\n      this.setState(prevState => ({\n        searchFilters: {\n          ...prevState.searchFilters,\n          [name]: value\n        }\n      }));\n    } else {\n      this.setState(prevState => ({\n        searchFilters: {\n          ...prevState.searchFilters,\n          [name]: value\n        }\n      }));\n    }\n  }\n  \n  \n  \n\n  \n\n  handleFilterChange = (event) => {\n    const { name, value } = event.target;\n    this.setState(prevState => ({\n      searchFilters: {\n        ...prevState.searchFilters,\n        [name]: value\n      }\n    }));\n  }\n  \n  \n\n  handleSearch = async() => {\n    console.log('search clicked');\n    const { searchTerm, searchFilters } = this.state;\n    \n    try {\n      // console.log('api called in search bar')\n      // const { minPrice, maxPrice, noBeds, noBaths, propertyType, mapBounds, buy, rent } = searchFilters;\n      // let url = `http://127.0.0.1:8003/get_properties/?page_size=50&bedroom_num=${noBeds}&bathroomNum=${noBaths}&property_type=${propertyType}&search=${searchTerm}&buy=${buy}&rent=${rent}`;\n  \n      // if (minPrice) {\n      //   url += `&price_min=${minPrice}`;\n      // }\n      // if (maxPrice) {\n      //   url += `&price_max=${maxPrice}`;\n      // }\n  \n      // if (mapBounds) {\n      //   url += `&latitude_min=${mapBounds.getSouthWest().lat()}&latitude_max=${mapBounds.northEast.lat}&longitude_min=${mapBounds.getSouthWest().lng()}&longitude_max=${mapBounds.getNorthEast().lng()}`;\n      // }\n  \n      // if (this.state.rent) {\n      //   url += '&rent=true';\n      // } else if (this.state.buy) {\n      //   url += '&buy=true';\n      // }\n  \n      // const response = await fetch(url);\n      // const data = await response.json();\n      // const properties = data.properties;\n      // this.setState({ properties: properties });\n      // console.log(properties)\n      this.props.onSearch(searchTerm, searchFilters);\n\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    console.log('searchbar rendering start');\n    return (\n      <div className=\"search-bar\">\n          <label\n          style={{ paddingRight: \"1em\" ,paddingLeft:\"1em\", marginRight:\"1em\", marginLeft: \"1em\" }}\n          >\n          Buy:\n          <input\n            type=\"checkbox\"\n            name=\"buy\"\n            checked={this.state.searchFilters.buy}\n            onChange={this.handleInputChange}\n            \n\n          />\n        </label>\n        <label>\n          Rent:\n          <input\n            type=\"checkbox\"\n            name=\"rent\"\n            checked={this.state.searchFilters.rent}\n            onChange={this.handleInputChange}\n            style={{ paddingRight: \"1em\" ,paddingLeft:\"1em\", marginRight:\"1em\", marginLeft: \"1em\" }}\n\n          />\n        </label>\n        <div className=\"search-bar-container\" style = {{display:\"flex\"}}>\n  <div className=\"search-bar-row\" >\n    <PlacesAutocomplete\n      value={this.state.address}\n      onChange={this.handleChange}\n      onSelect={this.handleSelect}\n    >\n      {({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading,\n      }) => (\n        <div className=\"search-bar-autocomplete\" >\n          <input\n            {...getInputProps({\n              placeholder: \"Search Places ...\",\n              className: \"location-search-input\",\n            })}\n          />\n          <div className=\"suggestions-container\" >\n            {loading && <div>Loading...</div>}\n            {suggestions.map((suggestion) => {\n              const className = suggestion.active\n                ? \"suggestion-item--active\"\n                : \"suggestion-item\";\n              const style = suggestion.active\n                ? {\n                    backgroundColor: \"#fafafa\",\n                    cursor: \"pointer\",\n                  }\n                : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n              return (\n                <div\n                  {...getSuggestionItemProps(suggestion, {\n                    className,\n                    style: suggestion.active\n                ? {\n                    backgroundColor: \"#fafafa\",\n                    cursor: \"pointer\",\n                    fontSize: \"13px\",\n                  }\n                : {\n                    backgroundColor: \"#ffffff\",\n                    cursor: \"pointer\",\n                    fontSize: \"13px\",\n                  },\n                  })}\n                >\n                  {suggestion.description.slice(0, 30)}\n                  {suggestion.description.length > 30 ? '...' : ''}\n                </div>\n              );\n            })}\n            {suggestions.length > 0 && (\n              <div className=\"suggestions-dropdown\" >\n                {suggestions.map((suggestion) => (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className: \"suggestion-dropdown-item\",\n                    })}\n                  >\n\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </PlacesAutocomplete>\n    </div>\n\n    <div className=\"search-bar-input-container\" >\n      <input\n        type=\"number\"\n        name=\"minPrice\"\n        placeholder=\"Min Price\"\n        value={this.state.searchFilters.minPrice}\n        onChange={this.handleFilterChange}\n        className=\"search-bar-input\"\n        style={{marginRight:'20px'}}\n      />\n\n      <input\n        type=\"number\"\n        name=\"maxPrice\"\n        placeholder=\"Max Price\"\n        value={this.state.searchFilters.maxPrice}\n        onChange={this.handleFilterChange}\n        className=\"search-bar-input\"\n        style={{marginRight:'20px'}}\n\n      />\n\n      <input\n        type=\"number\"\n        name=\"noBeds\"\n        placeholder=\"No of Beds\"\n        value={this.state.searchFilters.noBeds}\n        onChange={this.handleFilterChange}\n        className=\"search-bar-input\"\n        style={{marginRight:'20px'}}\n\n      />\n\n      <input\n        type=\"number\"\n        name=\"noBaths\"\n        placeholder=\"No of Baths\"\n        value={this.state.searchFilters.noBaths}\n        onChange={this.handleFilterChange}\n        style={{marginRight:'20px'}}\n      />\n\n      <button onClick={this.handleSearch} className=\"search-bar-button\">\n        Search\n      </button>\n    </div>\n  \n</div>\n</div>\n\n          \n          \n          \n          \n    );\n  }\n  \n  \n  \n}\n\nexport default SearchBar;","/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/components/Marker/marker.js",[],[],"/Users/nandamyashwanth/Documents/P/lease/lease/lease-app-downgrade/src/components/PropertyDetail/propertydetail.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":186,"column":21,"nodeType":"31","messageId":"32","endLine":186,"endColumn":26},"no-unused-vars","'style' is assigned a value but never used.","Identifier","unusedVar"]