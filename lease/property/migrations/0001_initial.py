# Generated by Django 4.1.7 on 2023-02-18 17:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Formatted",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "availability",
                    models.IntegerField(null=True, verbose_name="Availability"),
                ),
                (
                    "sub_availability",
                    models.IntegerField(null=True, verbose_name="Sub Availability"),
                ),
                (
                    "availability_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Availability Date"
                    ),
                ),
                (
                    "avg_price",
                    models.IntegerField(null=True, verbose_name="Average Price"),
                ),
                (
                    "price_sqft",
                    models.SmallIntegerField(
                        null=True, verbose_name="Price Per Square Foot"
                    ),
                ),
                (
                    "logo",
                    models.CharField(max_length=1, null=True, verbose_name="Logo"),
                ),
                (
                    "floor_number",
                    models.SmallIntegerField(null=True, verbose_name="Floor Number"),
                ),
                (
                    "tenant_preferences",
                    models.CharField(
                        max_length=2, null=True, verbose_name="Tenant Preferences"
                    ),
                ),
                (
                    "prop_type_label",
                    models.CharField(
                        max_length=25, null=True, verbose_name="Property Type Label"
                    ),
                ),
                (
                    "furnish_label",
                    models.CharField(
                        max_length=12, null=True, verbose_name="Furnish Label"
                    ),
                ),
                (
                    "furnishing_attributes",
                    models.TextField(null=True, verbose_name="Furnishing Attributes"),
                ),
                (
                    "rera_type",
                    models.CharField(max_length=4, null=True, verbose_name="Rera Type"),
                ),
                (
                    "price_in_words",
                    models.CharField(
                        max_length=20, null=True, verbose_name="Price In Words"
                    ),
                ),
                (
                    "description",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "havephoto",
                    models.CharField(
                        max_length=1, null=True, verbose_name="Have Photo"
                    ),
                ),
                ("amenities", models.TextField(null=True, verbose_name="Amenities")),
                (
                    "alt_tag",
                    models.CharField(max_length=50, null=True, verbose_name="Alt Tag"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormattedLandmarkDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=100, null=True)),
                ("text", models.CharField(max_length=100, null=True)),
                ("className", models.CharField(max_length=100, null=True)),
                ("icon", models.URLField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FSLData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "localityId",
                    models.PositiveIntegerField(null=True, verbose_name="Locality ID"),
                ),
                (
                    "type",
                    models.CharField(max_length=3, null=True, verbose_name="Type"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.IntegerField(blank=True, null=True)),
                ("cityName", models.CharField(max_length=100)),
                ("buildingId", models.IntegerField(null=True)),
                ("buildingName", models.CharField(max_length=100)),
                ("societyName", models.CharField(max_length=100)),
                ("localityId", models.IntegerField(null=True)),
                ("localityName", models.CharField(max_length=100)),
                ("address", models.CharField(max_length=200)),
            ],
            options={"verbose_name": "Location",},
        ),
        migrations.CreateModel(
            name="MapDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField(null=True, verbose_name="Latitude")),
                ("longitude", models.FloatField(null=True, verbose_name="Longitude")),
                (
                    "zoomLevel",
                    models.PositiveSmallIntegerField(
                        null=True, verbose_name="Zoom Level"
                    ),
                ),
                (
                    "source",
                    models.CharField(max_length=10, null=True, verbose_name="Source"),
                ),
                (
                    "mapAccuracy",
                    models.PositiveSmallIntegerField(
                        null=True, verbose_name="Map Accuracy"
                    ),
                ),
                (
                    "mapped",
                    models.CharField(max_length=2, null=True, verbose_name="Mapped"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MetaData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prop_photo_count",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Prop Photo Count"
                    ),
                ),
                (
                    "prop_video_count",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Prop Video Count"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contact_name", models.CharField(max_length=100)),
                ("contact_company_name", models.CharField(max_length=100)),
                ("class_label", models.CharField(max_length=1)),
                ("contact_city", models.PositiveSmallIntegerField(null=True)),
                ("assigned_to_profileid", models.PositiveIntegerField(null=True)),
                ("url", models.URLField(blank=True, null=True)),
                ("photo_url", models.URLField(null=True)),
                (
                    "dealer_seo_url",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        max_length=20, null=True, verbose_name="Registration number"
                    ),
                ),
                (
                    "registration_status",
                    models.CharField(
                        max_length=20, null=True, verbose_name="Registration status"
                    ),
                ),
                ("show_flag", models.BooleanField(null=True, verbose_name="Show flag")),
            ],
        ),
        migrations.CreateModel(
            name="SuperProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contact_company_name", models.CharField(max_length=255)),
                ("photo_url", models.URLField(null=True)),
                ("since", models.IntegerField(null=True)),
                ("total_eoi", models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("propId", models.CharField(max_length=20, null=True)),
                ("photoUrl", models.URLField(null=True)),
                ("mediumPhotoUrl", models.URLField(null=True)),
                ("preference", models.CharField(max_length=1, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "propertyType",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("locality", models.CharField(blank=True, max_length=50, null=True)),
                ("builtupArea", models.FloatField(blank=True, null=True)),
                ("areaUnit", models.CharField(blank=True, max_length=10, null=True)),
                ("builtupSqft", models.FloatField(blank=True, null=True)),
                ("transactType", models.CharField(blank=True, max_length=1, null=True)),
                ("ownType", models.IntegerField(blank=True, null=True)),
                ("bedroomNum", models.IntegerField(blank=True, null=True)),
                ("bathroomNum", models.IntegerField(blank=True, null=True)),
                (
                    "bathroomAttached",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                (
                    "balconyAttached",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("balconyNum", models.IntegerField(blank=True, null=True)),
                ("pricePerUnitArea", models.FloatField(blank=True, null=True)),
                ("bookingAmount", models.IntegerField(blank=True, null=True)),
                ("availability", models.CharField(blank=True, max_length=1, null=True)),
                ("furnish", models.IntegerField(blank=True, null=True)),
                ("facing", models.IntegerField(blank=True, null=True)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("floorNum", models.IntegerField(blank=True, null=True)),
                ("totalFloor", models.IntegerField(blank=True, null=True)),
                ("postingDate", models.IntegerField(blank=True, null=True)),
                ("updateDate", models.IntegerField(blank=True, null=True)),
                ("classs", models.CharField(blank=True, max_length=1, null=True)),
                ("resCom", models.CharField(blank=True, max_length=1, null=True)),
                ("propName", models.CharField(max_length=50)),
                ("propertyNumber", models.IntegerField()),
                ("minPrice", models.IntegerField(blank=True, null=True)),
                ("maxPrice", models.IntegerField(blank=True, null=True)),
                ("priceSqft", models.FloatField(blank=True, null=True)),
                ("listing", models.CharField(blank=True, max_length=1, null=True)),
                ("carpetArea", models.FloatField(blank=True, null=True)),
                (
                    "carpetAreaUnit",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("carpetSqft", models.FloatField(blank=True, null=True)),
                ("verified", models.CharField(max_length=1)),
                ("superBuiltUpArea", models.FloatField(blank=True, null=True)),
                (
                    "superBuiltUpAreaUnit",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("superBuiltUpSqft", models.FloatField(blank=True, null=True)),
                ("maskContact", models.CharField(blank=True, max_length=1, null=True)),
                ("confId", models.IntegerField(blank=True, null=True)),
                ("brokerage", models.IntegerField(blank=True, null=True)),
                ("deposit", models.IntegerField(blank=True, null=True)),
                ("depositType", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "cornerProperty",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("reservedParking", models.TextField(blank=True, null=True)),
                ("minAreaSqft", models.FloatField(blank=True, null=True)),
                ("maxAreaSqft", models.FloatField(blank=True, null=True)),
                ("showBsp", models.BooleanField(null=True)),
                ("isNewLaunch", models.CharField(blank=True, max_length=1, null=True)),
                (
                    "isPosterReraRegistered",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "isDealerReraRegistered",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("havephoto", models.CharField(blank=True, max_length=1, null=True)),
                ("altTag", models.CharField(blank=True, max_length=20, null=True)),
                ("isPreLeased", models.BooleanField(null=True)),
                ("preLeasedCurrentRent", models.IntegerField(blank=True, null=True)),
                ("productType", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "topUsps",
                    models.TextField(blank=True, null=True, verbose_name="TopUsps"),
                ),
                ("selfVerified", models.CharField(blank=True, max_length=1, null=True)),
                ("expiryDate", models.DateTimeField(blank=True, null=True)),
                ("gated", models.CharField(blank=True, max_length=1, null=True)),
                ("groupName", models.CharField(blank=True, max_length=20, null=True)),
                ("groupMeta", models.TextField(blank=True, null=True)),
                ("propertyTypeU", models.IntegerField(blank=True, null=True)),
                ("areaUnitU", models.IntegerField(blank=True, null=True)),
                ("postingDateU", models.IntegerField(blank=True, null=True)),
                ("updateDateU", models.IntegerField(blank=True, null=True)),
                (
                    "carpetAreaUnitU",
                    models.FloatField(verbose_name="CARPETAREA_UNIT__U"),
                ),
                (
                    "superBuiltupAreaUnitU",
                    models.FloatField(verbose_name="SUPERBUILTUPAREA_UNIT__U"),
                ),
                (
                    "expiryDateU",
                    models.CharField(max_length=100, verbose_name="ExpiryDate"),
                ),
                ("area", models.CharField(max_length=100, verbose_name="AREA")),
                (
                    "secondaryArea",
                    models.CharField(max_length=100, verbose_name="SECONDARY_AREA"),
                ),
                ("price", models.CharField(max_length=100, verbose_name="PRICE")),
                (
                    "propHeading",
                    models.CharField(max_length=100, verbose_name="PROP_HEADING"),
                ),
                (
                    "propDetailsUrl",
                    models.CharField(max_length=100, verbose_name="PROP_DETAILS_URL"),
                ),
                (
                    "valueLabel",
                    models.CharField(max_length=100, verbose_name="VALUE_LABEL"),
                ),
                (
                    "classHeading",
                    models.CharField(max_length=100, verbose_name="CLASS_HEADING"),
                ),
                ("page", models.PositiveSmallIntegerField(verbose_name="PAGE")),
                (
                    "classLabel",
                    models.CharField(max_length=100, verbose_name="CLASS_LABEL"),
                ),
                ("isFSL", models.CharField(max_length=2, verbose_name="IS_FSL")),
                ("isFresh", models.BooleanField(verbose_name="IS_FRESH")),
                (
                    "shortlisted",
                    models.CharField(max_length=2, verbose_name="SHORTLISTED"),
                ),
                ("reported", models.CharField(max_length=2, verbose_name="REPORTED")),
                (
                    "registerDate",
                    models.CharField(max_length=100, verbose_name="REGISTER_DATE__U"),
                ),
                (
                    "postedOnColored",
                    models.BooleanField(verbose_name="POSTED_ON_COLORED"),
                ),
                (
                    "totalLandmarkCount",
                    models.PositiveSmallIntegerField(
                        verbose_name="Total Landmark Count"
                    ),
                ),
                (
                    "contactCityName",
                    models.PositiveSmallIntegerField(verbose_name="Contact City Name"),
                ),
                (
                    "contactName",
                    models.CharField(max_length=100, verbose_name="Contact Name"),
                ),
                (
                    "contactCompanyName",
                    models.CharField(
                        max_length=100, verbose_name="Contact Company Name"
                    ),
                ),
                ("dealerPhotoUrl", models.URLField(verbose_name="Dealer Photo URL")),
                (
                    "isDefaultDealerImage",
                    models.CharField(
                        max_length=1, verbose_name="Is Default Dealer Image"
                    ),
                ),
                (
                    "assignedToProfileid",
                    models.PositiveIntegerField(verbose_name="Assigned To Profile ID"),
                ),
                (
                    "societyName",
                    models.CharField(max_length=100, verbose_name="Society Name"),
                ),
                (
                    "buildingName",
                    models.CharField(max_length=100, verbose_name="Building Name"),
                ),
                ("cityId", models.PositiveSmallIntegerField(verbose_name="City ID")),
                (
                    "localityWoCity",
                    models.CharField(
                        max_length=100, verbose_name="Locality Without City"
                    ),
                ),
                (
                    "registrationStatus",
                    models.CharField(
                        max_length=100, verbose_name="Registration Status"
                    ),
                ),
                (
                    "projectHighlights",
                    models.TextField(
                        blank=True, default="", verbose_name="Project Highlights"
                    ),
                ),
                ("projectRating", models.FloatField(verbose_name="Project Rating")),
                (
                    "formatted",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="property.formatted",
                    ),
                ),
                (
                    "formattedLandmarkDetails",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="property.formattedlandmarkdetails",
                    ),
                ),
                (
                    "fslData",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="property.fsldata",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="property.location",
                    ),
                ),
                (
                    "mapDetails",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="property.mapdetails",
                    ),
                ),
                (
                    "metadata",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="property.metadata",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="property.profile",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="profile",
            name="super_profile",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="property.superprofile",
            ),
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField(max_length=500)),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="property.property",
                    ),
                ),
            ],
        ),
    ]
